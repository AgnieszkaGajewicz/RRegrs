KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
#unlist(lapply(listaExperimento, function(kk) kk$roc$auc[1]))
KobjetoRoc$auc
load("~/Google Drive/2014_oporto/20150309_resultadosCesga/[Pronit_rfFuncs]_Mar06_17:07:52.RData")
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc$auc
#unlist(lapply(listaExperimento, function(kk) kk$roc$auc[1]))
load("~/Google Drive/2014_oporto/20150309_resultadosCesga/[Pronit_treebagFuncs]_Mar06_17:16:32.RData")
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc$auc
#unlist(lapply(listaExperimento, function(kk) kk$roc$auc[1]))
load("~/Google Drive/2014_oporto/20150309_resultadosCesga/[Pronit_svmrfe]_Mar06_19:08:43.RData")
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc$auc
#unlist(lapply(listaExperimento, function(kk) kk$roc$auc[1]))
KobjetoRoc
matriz<-confusionMatrix(data=KprediccionExperimento,reference=KrespuestaExperimento)
library(caret)
matriz<-confusionMatrix(data=KprediccionExperimento,reference=KrespuestaExperimento)
KprediccionExperimento
KrespuestaExperimento
lvs <- c("normal", "abnormal")
truth <- factor(rep(lvs, times = c(86, 258)),
levels = rev(lvs))
pred <- factor(
c(
rep(lvs, times = c(54, 32)),
rep(lvs, times = c(27, 231))),
levels = rev(lvs)
)
truth
pred
postResample(KrespuestaExperimento,KprediccionExperimento)
postResample(KrespuestaExperimento,KprediccionExperimento,lev=c("1","2"))
postResample(KrespuestaExperimento,KprediccionExperimento,lev=c('1','2'))
fitControl <- trainControl(method = "repeatedcv",
number = 10,
repeats = 10,
## Estimate class probabilities
classProbs = TRUE,
## Evaluate performance using
## the following function
summaryFunction = twoClassSummary)
set.seed(825)
gbmFit3 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
tuneGrid = gbmGrid,
## Specify which metric to optimize
metric = "ROC")
gbmFit3
KprediccionExperimento
KrespuestaExperimento
inds<-which(KrespuestaExperimento %in% c(1))
inds
salida<-KrespuestaExperimento[inds]=='HS'
salida
backup<-KrespuestaExperimento
KrespuestaExperimento<-KrespuestaExperimento[inds]=='HS'
KrespuestaExperimento
KrespuestaExperimento<-backup
KrespuestaExperimento
replace(KrespuestaExperimento, KrespuestaExperimento==1, 'HS')
KrespuestaExperimento
salida<-replace(KrespuestaExperimento, KrespuestaExperimento==1, 'HS')
salida
salida<-replace(salida,salida=2,'NS')
salida<-replace(salida,salida==2,'NS')
salida
matriz<-confusionMatrix(data=KprediccionExperimento,reference=salida)
KprediccionExperimento
salida
library(caret)
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc$auc
load("~/Google Drive/2014_oporto/20150309_resultadosCesga/[Pronit_svmrfe]_Mar06_19:08:43.RData")
library(caret)
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc$auc
KobjetoRoc
summary(KobjetoRoc)
KobjetoRoc$levels
KobjetoRoc$level
listaExperimento[[1]]$prediccion
listaExperimento[[1]]$prediccion[,2]
listaExperimento[[1]]$roc
listaExperimento[[1]]$resultadoRFE
listaExperimento[[1]]$resultadoRFE$results
listaExperimento[[1]]$resultadoRFE$bestSubset
listaExperimento[[1]]$resultadoRFE$optVariables
library(caret)
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
#unlist(lapply(listaExperimento, function(kk) kk$roc$auc[1]))
#matriz<-confusionMatrix(data=KprediccionExperimento,reference=salida)
#postResample(KrespuestaExperimento,KprediccionExperimento)
KobjetoRoc
salida<-cbind(KrespuestaExperimento,KprediccionExperimento)
salida
#borra todo lo que hay en el workspace
rm(list=ls(all=TRUE))
counts<-c(0.010,0.020,0.030,0.040,0.050)
barplot(counts, main="Finner p-value adjustment procedure", cex.names=0.75, xlab="Control technique: FSMKL", ylab="Ranking",names.arg=c("MKL","PSO-SVM","SVM","NB","GA-SVM"))
abline(h=0.041,col="blue",lwd=3)
#borra todo lo que hay en el workspace
rm(list=ls(all=TRUE))
counts<-c(0.010,0.020,0.030,0.040,0.050)
barplot(counts, main="Finner p-value adjustment procedure", cex.names=0.75, xlab="Control technique: FSMKL", ylab="Ranking",names.arg=c("MKL","PSO-SVM","SVM","NB","GA-SVM"))
abline(h=0.050,col="blue",lwd=3)
library(caret)
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
salida<-cbind(KrespuestaExperimento,KprediccionExperimento)
load("~/Google Drive/2014_oporto/20150309_resultadosCesga/[Pronit_svmrfe]_Mar06_19:08:43.RData")
library(caret)
library(pROC)
KrespuestaExperimento=c(listaExperimento[[1]]$respuesta,listaExperimento[[2]]$respuesta,listaExperimento[[3]]$respuesta,
listaExperimento[[4]]$respuesta,listaExperimento[[5]]$respuesta,listaExperimento[[6]]$respuesta,
listaExperimento[[7]]$respuesta,listaExperimento[[8]]$respuesta,listaExperimento[[9]]$respuesta,
listaExperimento[[10]]$respuesta)
KprediccionExperimento=c(listaExperimento[[1]]$prediccion[,2],listaExperimento[[2]]$prediccion[,2],listaExperimento[[3]]$prediccion[,2],
listaExperimento[[4]]$prediccion[,2],listaExperimento[[5]]$prediccion[,2],listaExperimento[[6]]$prediccion[,2],
listaExperimento[[7]]$prediccion[,2],listaExperimento[[8]]$prediccion[,2],listaExperimento[[9]]$prediccion[,2],
listaExperimento[[10]]$prediccion[,2])
#KrespuestaExperimento<-unlist(lapply(listaExperimento, function(kk) kk$respuesta))
#KprediccionExperimento<-unlist(lapply(listaExperimento, function(kk) kk$prediccion))
KobjetoRoc<-roc(KrespuestaExperimento,KprediccionExperimento)
salida<-cbind(KrespuestaExperimento,KprediccionExperimento)
salida
View(salida)
View(salida)
write.csv(salida,file=svmRFE_salida,rownames=FALSE,colnames=FALSE)
write.csv(salida,file='~/Google Drive/2014_oporto/20150309_resultadosCesga/svmRFE_salida.csv',rownames=FALSE,colnames=FALSE)
write.csv(salida,file='~/Google Drive/2014_oporto/20150309_resultadosCesga/svmRFE_salida.csv',colnames=FALSE)
write.csv(salida,file='~/Google Drive/2014_oporto/20150309_resultadosCesga/svmRFE_salida.csv')
write.csv(salida,file='~/Google Drive/2014_oporto/20150309_resultadosCesga/svmRFE_salida.csv',row.names=FALSE,col.names=FALSE)
library(pROC)
library(R.matlab)
#borra todo lo que hay en el workspace
rm(list=ls(all=TRUE))
#cargamos los datos de auroc desde fichero
ficheroAurocMKL=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/MKL_salidaDiezExperimentos.mat");
ficheroAurocSVM=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/SVM_salida10Experimentos.mat");
ficheroAurocGA=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/GA_salida10Experimentos.mat");
ficheroAurocPSO=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/PSO_salida10Experimentos.mat");
ficheroAurocFSMKL=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/FSMKL001_salidaDiezExperimentos.mat");
ficheroMCEcorrSVM=read.table('/Users/carlos/Dropbox/carlos/2015_NASCIREP/send/revision/reviewer1/kernelsEditor/threeVectors.tsv', header=TRUE, sep="\t")
listaPredictor=list()
listaResponse=list()
valores=list()
for(i in 1:10){
fileName<-paste("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosFinalesSVMRFE/listaExperimentoit",i,".RData",sep="")
load(file=fileName)
listaPredictor[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$predictor))
listaResponse[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$response))
valores[[i]]<-roc(listaResponse[[i]],listaPredictor[[i]])$auc
}
predicciones<-unlist(lapply(listaPredictor, function(kk)kk))
respuestas<-unlist(lapply(listaResponse, function(kk)kk))
nb<-ficheroAurocSVM[[1]][c(1:1000),]
mkl<-ficheroAurocMKL[[1]]
svm<-ficheroAurocSVM[[1]]
ga<-ficheroAurocGA[[1]]
pso<-ficheroAurocPSO[[1]]
fsmkl<-ficheroAurocFSMKL[[1]]
MCEcorrSVM<-ficheroMCEcorrSVM
rocobj1 <- plot.roc(mkl[,c(2)],mkl[,c(1)], main="ROC curves",col="deeppink",smooth=TRUE)
rocobj2 <- lines.roc(svm[,c(2)],svm[,c(1)], col="purple",smooth=TRUE)
rocobj3 <- lines.roc(ga[,c(2)],ga[,c(1)], col="sienna1",smooth=TRUE)
rocobj4 <- lines.roc(pso[,c(2)],pso[,c(1)], col="blue",smooth=TRUE)
rocobj5 <- lines.roc(fsmkl[,c(2)],fsmkl[,c(1)], col="red",smooth=TRUE)
rocobj6 <- lines.roc(nb[,c(2)],nb[,c(1)], col="black",smooth=TRUE)
rocobj7 <- lines.roc(respuestas, predicciones, col="forestgreen",smooth=TRUE)
rocobj8 <- lines.roc(MCEcorrSVM[,c(1)],MCEcorrSVM[,c(3)], col="plum",smooth=TRUE)
legend(x=0.4,y=0.5,c("MKL","SVM","GA-SVM","PSO-SVM","FSMKL","NB","SVM-RFE","MCE-corr-SVM"),col = c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum"),fill=c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum", 0, 0))
install.packages(pROC)
install.packages('pROC')
install.packages('R.matlab')
library(pROC)
library(R.matlab)
#borra todo lo que hay en el workspace
rm(list=ls(all=TRUE))
#cargamos los datos de auroc desde fichero
ficheroAurocMKL=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/MKL_salidaDiezExperimentos.mat");
ficheroAurocSVM=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/SVM_salida10Experimentos.mat");
ficheroAurocGA=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/GA_salida10Experimentos.mat");
ficheroAurocPSO=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/PSO_salida10Experimentos.mat");
ficheroAurocFSMKL=readMat("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/FSMKL001_salidaDiezExperimentos.mat");
ficheroMCEcorrSVM=read.table('/Users/carlos/Dropbox/carlos/2015_NASCIREP/send/revision/reviewer1/kernelsEditor/threeVectors.tsv', header=TRUE, sep="\t")
listaPredictor=list()
listaResponse=list()
valores=list()
for(i in 1:10){
fileName<-paste("/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosFinalesSVMRFE/listaExperimentoit",i,".RData",sep="")
load(file=fileName)
listaPredictor[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$predictor))
listaResponse[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$response))
valores[[i]]<-roc(listaResponse[[i]],listaPredictor[[i]])$auc
}
predicciones<-unlist(lapply(listaPredictor, function(kk)kk))
respuestas<-unlist(lapply(listaResponse, function(kk)kk))
nb<-ficheroAurocSVM[[1]][c(1:1000),]
mkl<-ficheroAurocMKL[[1]]
svm<-ficheroAurocSVM[[1]]
ga<-ficheroAurocGA[[1]]
pso<-ficheroAurocPSO[[1]]
fsmkl<-ficheroAurocFSMKL[[1]]
MCEcorrSVM<-ficheroMCEcorrSVM
rocobj1 <- plot.roc(mkl[,c(2)],mkl[,c(1)], main="ROC curves",col="deeppink",smooth=TRUE)
rocobj2 <- lines.roc(svm[,c(2)],svm[,c(1)], col="purple",smooth=TRUE)
rocobj3 <- lines.roc(ga[,c(2)],ga[,c(1)], col="sienna1",smooth=TRUE)
rocobj4 <- lines.roc(pso[,c(2)],pso[,c(1)], col="blue",smooth=TRUE)
rocobj5 <- lines.roc(fsmkl[,c(2)],fsmkl[,c(1)], col="red",smooth=TRUE)
rocobj6 <- lines.roc(nb[,c(2)],nb[,c(1)], col="black",smooth=TRUE)
rocobj7 <- lines.roc(respuestas, predicciones, col="forestgreen",smooth=TRUE)
rocobj8 <- lines.roc(MCEcorrSVM[,c(1)],MCEcorrSVM[,c(3)], col="plum",smooth=TRUE)
legend(x=0.4,y=0.5,c("MKL","SVM","GA-SVM","PSO-SVM","FSMKL","NB","SVM-RFE","MCE-corr-SVM"),col = c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum"),fill=c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum", 0, 0))
ficheroAurocMKL=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/MKL_salidaDiezExperimentos.mat");
library(pROC)
library(R.matlab)
#borra todo lo que hay en el workspace
rm(list=ls(all=TRUE))
#cargamos los datos de auroc desde fichero
ficheroAurocMKL=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/MKL_salidaDiezExperimentos.mat");
ficheroAurocSVM=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/SVM_salida10Experimentos.mat");
ficheroAurocGA=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/GA_salida10Experimentos.mat");
ficheroAurocPSO=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/PSO_salida10Experimentos.mat");
ficheroAurocFSMKL=readMat("~/MEGAsync/backupOLD_googleDrive/OLD/1_Tesis/resultados/FSMKL001_salidaDiezExperimentos.mat");
ficheroMCEcorrSVM=read.table('~/Dropbox/carlos/2015_NASCIREP/send/revision/reviewer1/kernelsEditor/threeVectors.tsv', header=TRUE, sep="\t")
listaPredictor=list()
listaResponse=list()
valores=list()
for(i in 1:10){
fileName<-paste("~/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosFinalesSVMRFE/listaExperimentoit",i,".RData",sep="")
load(file=fileName)
listaPredictor[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$predictor))
listaResponse[[i]]<-unlist(lapply(listaExperimento, function(kk) kk$roc$response))
valores[[i]]<-roc(listaResponse[[i]],listaPredictor[[i]])$auc
}
predicciones<-unlist(lapply(listaPredictor, function(kk)kk))
respuestas<-unlist(lapply(listaResponse, function(kk)kk))
nb<-ficheroAurocSVM[[1]][c(1:1000),]
mkl<-ficheroAurocMKL[[1]]
svm<-ficheroAurocSVM[[1]]
ga<-ficheroAurocGA[[1]]
pso<-ficheroAurocPSO[[1]]
fsmkl<-ficheroAurocFSMKL[[1]]
MCEcorrSVM<-ficheroMCEcorrSVM
rocobj1 <- plot.roc(mkl[,c(2)],mkl[,c(1)], main="ROC curves",col="deeppink",smooth=TRUE)
rocobj2 <- lines.roc(svm[,c(2)],svm[,c(1)], col="purple",smooth=TRUE)
rocobj3 <- lines.roc(ga[,c(2)],ga[,c(1)], col="sienna1",smooth=TRUE)
rocobj4 <- lines.roc(pso[,c(2)],pso[,c(1)], col="blue",smooth=TRUE)
rocobj5 <- lines.roc(fsmkl[,c(2)],fsmkl[,c(1)], col="red",smooth=TRUE)
rocobj6 <- lines.roc(nb[,c(2)],nb[,c(1)], col="black",smooth=TRUE)
rocobj7 <- lines.roc(respuestas, predicciones, col="forestgreen",smooth=TRUE)
rocobj8 <- lines.roc(MCEcorrSVM[,c(1)],MCEcorrSVM[,c(3)], col="plum",smooth=TRUE)
legend(x=0.4,y=0.5,c("MKL","SVM","GA-SVM","PSO-SVM","FSMKL","NB","SVM-RFE","MCE-corr-SVM"),col = c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum"),fill=c("deeppink","purple","sienna1","blue","red","black","forestgreen","plum", 0, 0))
rocobj1$auc
fichero<-read.csv(file='~/Dropbox/2015_mesejo/inputPatternsTextureColor_RawFormat.txt')
View(fichero)
View(fichero)
fichero2<-read.csv(file='~/Dropbox/2015_mesejo/inputPatternsTextureColor_RawFormat_shape.txt')
View(fichero2)
fichero2<-read.csv(file='~/Dropbox/2015_mesejo/inputPatternsTextureColor_RawFormat_shape.txt')
fichero<-read.csv(file='~/Dropbox/2015_mesejo/inputPatternsTextureColor_RawFormat.txt')
View(fichero2)
rm(list = ls())
rm(list = ls())
columnaNombres<-c('fold1')
rownames<-c('numVar_exp1','numVar_exp2','numVar_exp3','numVar_exp4','numVar_exp5','numVar_exp6','numVar_exp7','numVar_exp8','numVar_exp9','numVar_exp10')
#load('/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosRFE_rfFuncs_treebagFuncs/rfFuncs.Rdata')
#rfFuncsNumber<-matrizResultados
#load('/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosRFE_rfFuncs_treebagFuncs/treebagsFuncs.Rdata')
#treebagsFuncsNumber<-matrizResultados
#load('/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosRFE_rfFuncs_treebagFuncs/svmrfeFuncs.Rdata')
#svmrfeFuncsNumber<-matrizResultados
vectorMKL<-rep(14,times=10)
vectorMKL <- as.matrix(vectorMKL)
mklNumber <- vectorMKL
colnames(mklNumber)<-columnaNombres
rownames(mklNumber)<-rownames
mklNumberVector<-as.vector(mklNumber)
nbNumberVector<-as.vector(rep(275,times=10))
svmNumberVector<-as.vector(rep(275,times=10))
gaNumberVector<-as.vector(c(59,62,65,43,50,48,59,66,54,57))
psoNumberVector<-as.vector(c(103,122,107,124,128,89,117,122,109,109))
svmrfeNumberVector<-as.vector(c(32,64,32,32,64,64,32,32,32,32))
fsmklNumberVector<-as.vector(c(31,22,35,22,23,24,22,35,25,22))
data<-data.frame(cbind(mklNumberVector,nbNumberVector,svmNumberVector,gaNumberVector,psoNumberVector,svmrfeNumberVector,fsmklNumberVector))
boxplot(data,las=2, ylab ="Number of features", names = c('MKL', 'NB','SVM','GA','PSO','SVMRFE','FSMKL'),par(mar = c(6, 5, 4, 2)))
####
columnaNombres<-c('fold1','fold2','fold3','fold4','fold5','fold6','fold7','fold8','fold9','fold10')
rownames<-c('numVar_exp1','numVar_exp2','numVar_exp3','numVar_exp4','numVar_exp5','numVar_exp6','numVar_exp7','numVar_exp8','numVar_exp9','numVar_exp10')
load('/Users/carlos/MEGAsync/backupOLD_googleDrive/OLD/2013-Softcomputing/resultadosRFE_rfFuncs_treebagFuncs/svmrfeFuncs.Rdata')
svmrfeFuncsNumber<-matrizResultados
svmrfeFuncsNumberVector<-as.vector(svmrfeFuncsNumber)
vectorMKL<-rep(14,times=10)
vectorMKL <- as.matrix(vectorMKL)
mklNumber <- vectorMKL[,rep(1,10)]
colnames(mklNumber)<-columnaNombres
rownames(mklNumber)<-rownames
vectorFSMKL <-as.vector(c(31,22,35,22,23,24,22,35,25,22))
fsmklNumber<-rep(vectorFSMKL,times=10)
gaNumberVector<-rep(gaNumberVector,times=10)
psoNumberVector<-rep(psoNumberVector,times=10)
mklNumberVector<-as.vector(mklNumber)
fsmklNumberVector<-as.vector(fsmklNumber)
data<-data.frame(cbind(mklNumberVector,svmrfeFuncsNumberVector,fsmklNumberVector,psoNumberVector,gaNumberVector))
p<-boxplot(data,las=1, ylab ="Number of features", names = c('MKL','SVM-RFE','FSMKL','PSO-SVM','GA-SVM'),par(cex.axis = 0.7,mar = c(3, 5, 4, 2)))
text(c(0,0,40),"*",cex=2)
read.csv(file='~/Desktop/vectores.csv')
vectores<-read.csv(file='~/Desktop/vectores.csv')
vectores<-read.csv(file='~/Desktop/vectores.csv',col.names = TRUE)
colnames(vectores)<-c('vPred','vResp')
vectores<-read.csv(file='~/Desktop/vectores.csv')
colnames(vectores)<-c('vPred','vResp')
View(vectores)
View(vectores)
summary(vectores)
rmse.funct<- function(obs,pred){
#obs==y, pred=predicted
return(sqrt(mean((pred - obs)^2)))
}
vectores[1]
vectores[2]
rmse.funct(vectores[1],vectores[2])
rmse.funct(vectores[2],vectores[1])
summary(vectores)
vectores<-read.csv(file='~/Desktop/vectores.csv')
colnames(vectores)<-c('vPred','vResp')
vResp<-vectores[2]
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
require(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This is does the summary; it's not easy to understand...
datac <- ddply(data, groupvars, .drop=.drop,
.fun= function(xx, col, na.rm) {
c( N    = length2(xx[,col], na.rm=na.rm),
mean = mean   (xx[,col], na.rm=na.rm),
sd   = sd     (xx[,col], na.rm=na.rm)
)
},
measurevar,
na.rm
)
# Rename the "mean" column
datac <- rename(datac, c("mean"=measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
vectores<-read.csv(file='~/Desktop/vectores.csv')
colnames(vectores)<-c('vPred','vResp')
#load file
txtvPred<-rep('vPred',505)
txtvResp<-rep('vResp',505)
vPred<-vectores[1]
vResp<-vectores[2]
text<-c(txtvPred,txtvResp)
values<-c(vPred,vResp)
df = data.frame(text,values)
names(df)<-c('variable','value')
library(ggplot2)
results.df = df
table1.df = results.df
table1.dfc = summarySE(table1.df,measurevar="value",groupvars=c("variable"))
ggplot(table1.dfc, family="Times", aes(x=variable, y=value,group=variable)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_point()+
scale_x_discrete(labels=c("vPred","vResp"))+
theme(axis.text.x=element_text(angle=45, hjust=1, size=10))+
xlab(NULL)+ylab(label="Vectores con FSMKL")
rmse.funct<- function(obs,pred){
#obs==y, pred=predicted
return(sqrt(mean((pred - obs)^2)))
}
rmse.funct(vPred,vResp)
read.csv(file='~/Desktop/mesejo.csv',col.names = F)
read.csv(file='~/Desktop/mesejo.csv')
datos<-read.csv(file='~/Desktop/mesejo.csv')
View(datos)
View(datos)
write.csv(datos,file = '~/Desktop/mesejoWeka.csv')
datos<-read.csv(file='~/Desktop/mesejo.csv')
View(datos)
datos<-read.csv(file='~/Desktop/mesejo.csv')
write.csv(datos,file = '~/Desktop/mesejoWeka.csv')
datos$X1<-as.character(datos$X1)
datos$X1[datos$X1=="1"]<-"adenoma"
datos$X1[datos$X1=="-1"]<-"malign"
write.csv(datos,file = '~/Desktop/mesejoWeka.csv')
datos<-csvread(file='~/DataResults/ds.House.csv')
datos<-read.csv(file='~/DataResults/ds.House.csv')
summary(datos)
datos<-read.csv(file='~/DataResults/ds.scaled.csv')
summary(datos)
library(caret)
library(corrplot)
library(glmnet)
library(kernlab)
library(doMC)
library(data.table)
setwd('~/github/RRegrs/TEST/')
source("../RRegrs/R/RRegrs_Functions.R")
load(file='glmnetModel.RData')
load(file='model.svmRadialReg.RData')
RRegrsResults = RRegrs(DataFileName = "ds/ds.pcorona.csv",
fDet="T", fScaling="T",iScaling=2,iScalCol=1,fENET="F",fLM="T",fGLM="F",fPLS="F",fLASSO="F",fSVRM="F",fNN="F",fRF="F",fRFRFE="F",fSVMRFE="T",
CVtypes = "repeatedcv",
iSplitTimes = 1, noYrand = 1,
noCores = 2)
RRegrsResults = RRegrs(DataFileName = "ds/ds.pcorona.csv",
fDet="T", fScaling="T",iScaling=2,iScalCol=1,fENET="F",fLM="F",fGLM="T",fPLS="F",fLASSO="F",fSVRM="F",fNN="F",fRF="T",fRFRFE="T",fSVMRFE="T",
CVtypes = "repeatedcv",
iSplitTimes = 1, noYrand = 1,
noCores = 5)
RRegrsResults = RRegrs(DataFileName = "ds/ds.pcorona.csv",
fDet="T", fScaling="T",iScaling=2,iScalCol=1,fENET="T",fLM="F",fGLM="T",fPLS="F",fLASSO="T",fSVRM="F",fNN="F",fRF="F",fRFRFE="T",fSVMRFE="T",
CVtypes = "repeatedcv",
iSplitTimes = 1, noYrand = 1,
noCores = 1)
